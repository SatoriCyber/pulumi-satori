// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **satori_custom_taxonomy_category** resource allows defining custom taxonomy categories.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as satori from "@satoricyber/pulumi-satori";
 *
 * const cat1 = new satori.CustomTaxonomyCategory("cat1", {color: "#808080"});
 * const cat2 = new satori.CustomTaxonomyCategory("cat2", {
 *     description: "category from terraform",
 *     color: "#000000",
 *     parentCategory: cat1.id,
 * });
 * const cls1 = new satori.CustomTaxonomyClassifier("cls1", {
 *     description: "classifier from terraform",
 *     type: "NON_AUTOMATIC",
 *     parentCategory: cat1.id,
 *     additionalSatoriCategories: ["pii"],
 * });
 * const cls2 = new satori.CustomTaxonomyClassifier("cls2", {
 *     description: "classifier from terraform",
 *     type: "SATORI_BASED",
 *     parentCategory: cat1.id,
 *     satoriBasedConfig: {
 *         satoriBaseClassifier: "EMAIL",
 *     },
 *     scope: {
 *         datasets: [satori_dataset.dataset1.id],
 *         includeLocations: [{
 *             datastore: satori_datastore.datastore0.id,
 *             location: {
 *                 relationalLocation: {
 *                     db: "db1",
 *                 },
 *             },
 *         }],
 *     },
 * });
 * const cls3 = new satori.CustomTaxonomyClassifier("cls3", {
 *     type: "CUSTOM",
 *     parentCategory: cat1.id,
 *     customConfig: {
 *         fieldNamePattern: "abc.*xyz",
 *         fieldType: "ANY",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class CustomTaxonomyCategory extends pulumi.CustomResource {
    /**
     * Get an existing CustomTaxonomyCategory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomTaxonomyCategoryState, opts?: pulumi.CustomResourceOptions): CustomTaxonomyCategory {
        return new CustomTaxonomyCategory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'satori:index/customTaxonomyCategory:CustomTaxonomyCategory';

    /**
     * Returns true if the given object is an instance of CustomTaxonomyCategory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomTaxonomyCategory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomTaxonomyCategory.__pulumiType;
    }

    /**
     * Category color.
     */
    public readonly color!: pulumi.Output<string>;
    /**
     * Category description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Category name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Parent category ID.
     */
    public readonly parentCategory!: pulumi.Output<string | undefined>;
    /**
     * Category tag.
     */
    public /*out*/ readonly tag!: pulumi.Output<string>;

    /**
     * Create a CustomTaxonomyCategory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomTaxonomyCategoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomTaxonomyCategoryArgs | CustomTaxonomyCategoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomTaxonomyCategoryState | undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentCategory"] = state ? state.parentCategory : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
        } else {
            const args = argsOrState as CustomTaxonomyCategoryArgs | undefined;
            if ((!args || args.color === undefined) && !opts.urn) {
                throw new Error("Missing required property 'color'");
            }
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentCategory"] = args ? args.parentCategory : undefined;
            resourceInputs["tag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomTaxonomyCategory.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomTaxonomyCategory resources.
 */
export interface CustomTaxonomyCategoryState {
    /**
     * Category color.
     */
    color?: pulumi.Input<string>;
    /**
     * Category description.
     */
    description?: pulumi.Input<string>;
    /**
     * Category name.
     */
    name?: pulumi.Input<string>;
    /**
     * Parent category ID.
     */
    parentCategory?: pulumi.Input<string>;
    /**
     * Category tag.
     */
    tag?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomTaxonomyCategory resource.
 */
export interface CustomTaxonomyCategoryArgs {
    /**
     * Category color.
     */
    color: pulumi.Input<string>;
    /**
     * Category description.
     */
    description?: pulumi.Input<string>;
    /**
     * Category name.
     */
    name?: pulumi.Input<string>;
    /**
     * Parent category ID.
     */
    parentCategory?: pulumi.Input<string>;
}
